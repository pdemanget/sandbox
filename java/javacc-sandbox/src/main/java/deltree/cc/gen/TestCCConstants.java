/* Generated By:JavaCC: Do not edit this line. TestCCConstants.java */
package deltree.cc.gen;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface TestCCConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int HOOK_LEFT = 5;
  /** RegularExpression Id. */
  int HOOK_RIGHT = 6;
  /** RegularExpression Id. */
  int SELECT = 7;
  /** RegularExpression Id. */
  int FROM = 8;
  /** RegularExpression Id. */
  int WHERE = 9;
  /** RegularExpression Id. */
  int AND = 10;
  /** RegularExpression Id. */
  int OR = 11;
  /** RegularExpression Id. */
  int IN = 12;
  /** RegularExpression Id. */
  int IS = 13;
  /** RegularExpression Id. */
  int NOT = 14;
  /** RegularExpression Id. */
  int NULL = 15;
  /** RegularExpression Id. */
  int BETWEEN = 16;
  /** RegularExpression Id. */
  int ORDER = 17;
  /** RegularExpression Id. */
  int BY = 18;
  /** RegularExpression Id. */
  int ASC = 19;
  /** RegularExpression Id. */
  int DESC = 20;
  /** RegularExpression Id. */
  int LIKE = 21;
  /** RegularExpression Id. */
  int ILIKE = 22;
  /** RegularExpression Id. */
  int LPAREN = 23;
  /** RegularExpression Id. */
  int RPAREN = 24;
  /** RegularExpression Id. */
  int DISTINCT = 25;
  /** RegularExpression Id. */
  int LIMIT = 26;
  /** RegularExpression Id. */
  int ALL = 27;
  /** RegularExpression Id. */
  int ENSEMBLIST_OPERATORS = 28;
  /** RegularExpression Id. */
  int UNION = 29;
  /** RegularExpression Id. */
  int EXCEPT = 30;
  /** RegularExpression Id. */
  int INTERSECT = 31;
  /** RegularExpression Id. */
  int UNION_ALL = 32;
  /** RegularExpression Id. */
  int FUNCTION_NAME = 33;
  /** RegularExpression Id. */
  int IDENTIFIER = 34;
  /** RegularExpression Id. */
  int IDENTIFIER_MQL_SQL = 35;
  /** RegularExpression Id. */
  int DIGIT = 36;
  /** RegularExpression Id. */
  int LETTER = 37;
  /** RegularExpression Id. */
  int CHAR_LITERAL = 38;
  /** RegularExpression Id. */
  int BIND_VARIABLE = 39;
  /** RegularExpression Id. */
  int DOUBLE = 40;
  /** RegularExpression Id. */
  int INTEGER = 41;
  /** RegularExpression Id. */
  int NEGATIVE_INTEGER = 42;
  /** RegularExpression Id. */
  int PMSIPILOT_DIGIT = 43;
  /** RegularExpression Id. */
  int OPERATOR_TYPE = 44;
  /** RegularExpression Id. */
  int EQ = 45;
  /** RegularExpression Id. */
  int NEQ = 46;
  /** RegularExpression Id. */
  int GT = 47;
  /** RegularExpression Id. */
  int GTE = 48;
  /** RegularExpression Id. */
  int LT = 49;
  /** RegularExpression Id. */
  int LTE = 50;
  /** RegularExpression Id. */
  int OPERATOR_ARITHMETIC = 51;
  /** RegularExpression Id. */
  int PLUS = 52;
  /** RegularExpression Id. */
  int MOINS = 53;
  /** RegularExpression Id. */
  int DIVISION = 54;
  /** RegularExpression Id. */
  int MULTIPLICATION = 55;
  /** RegularExpression Id. */
  int MODULO = 56;
  /** RegularExpression Id. */
  int PUISS = 57;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "\"[\"",
    "\"]\"",
    "\"SELECT\"",
    "\"FROM\"",
    "\"WHERE\"",
    "\"AND\"",
    "\"OR\"",
    "\"IN\"",
    "\"IS\"",
    "\"NOT\"",
    "\"NULL\"",
    "\"BETWEEN\"",
    "\"ORDER\"",
    "\"BY\"",
    "\"ASC\"",
    "\"DESC\"",
    "\"LIKE\"",
    "\"ILIKE\"",
    "\"(\"",
    "\")\"",
    "\"DISTINCT\"",
    "\"LIMIT\"",
    "\"ALL\"",
    "<ENSEMBLIST_OPERATORS>",
    "\"UNION\"",
    "\"EXCEPT\"",
    "\"INTERSECT\"",
    "<UNION_ALL>",
    "<FUNCTION_NAME>",
    "<IDENTIFIER>",
    "<IDENTIFIER_MQL_SQL>",
    "<DIGIT>",
    "<LETTER>",
    "<CHAR_LITERAL>",
    "<BIND_VARIABLE>",
    "<DOUBLE>",
    "<INTEGER>",
    "<NEGATIVE_INTEGER>",
    "<PMSIPILOT_DIGIT>",
    "<OPERATOR_TYPE>",
    "\"=\"",
    "\"<>\"",
    "\">\"",
    "\">=\"",
    "\"<\"",
    "\"<=\"",
    "<OPERATOR_ARITHMETIC>",
    "\"+\"",
    "\"-\"",
    "\"/\"",
    "\"*\"",
    "\"%\"",
    "\"^\"",
  };

}
